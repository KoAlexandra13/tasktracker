version: "3.9"

services:
  db:
    image: postgres
    env_file:
      - db.env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  backend:
    build: backend/
    entrypoint: ./backend-entrypoint.prod.sh
    env_file:
      - db.env
    volumes:
      - './backend:/backend'
    depends_on:
      - db
  frontend:
    command: serve -s build
    environment:
      - NODE_ENV=production
    build:
      context: frontend/
      dockerfile: Dockerfile.prod
  celery:
    build: backend/
    entrypoint: ./celery-entrypoint.sh
    env_file:
      - db.env
    volumes:
      - './backend:/backend'
    depends_on:
      - db
      - redis
  redis:
    image: redis:alpine
  nginx:
    build: ./nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - './backend/staticfiles:/backend/static'
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    ports:
      - 80:80
    depends_on:
      - backend
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot

